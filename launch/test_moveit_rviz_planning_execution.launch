<?xml version="1.0" encoding="utf-8"?>
<launch>

    <!-- ========================================================================================== -->
    <!-- Launchfile de test générale pour utiliser moevit, rviz, et le simulateur RSI kuka.         -->
    <!-- Les fichiers moveit ont été originellement créé par gavanderhoorn, source github :         -->
    <!-- https://github.com/gavanderhoorn/kuka_experimental/tree/kr6r900sixx_moveit_rsi_convenience -->
    <!-- Ils  ont été modifiés dans le cadre de ce projet DIMR, voir dossier "moveit/"              -->
    <!-- Théoriquement, si RSI fonctionne sur le krc4, une connexion direct peut être établie       -->
    <!-- avec la commande suivante, en utilisant le package moveit pour la planification de traj:   --> 
    <!-- roslaunch dimr-kuka test_moveit_rviz_planning_execution.launch sim:=false                  -->
    <!-- ========================================================================================== -->


    <!-- ======================================== -->
    <!-- ARGUMENTS -->
    <!-- ======================================== -->


    <!-- Simulation ou pas, vrai par défaut -->
    <arg name="sim" default="true" />

    <!-- The name of the parameter under which the URDF is loaded -->
    <arg name="robot_description" default="robot_description"/>

    <!-- By default, we do not start a database (it can be large) -->
    <arg name="db" default="false" doc="Start the MoveIt database" />
    <!-- Allow user to specify database location -->
    <arg name="db_path" default="$(find dimr-kuka)/default_warehouse_mongo_db" doc="Path to database files" />

    <!-- name of the ros_control controllers (see below) -->
    <arg name="js_ctrlr" value="joint_state_controller" />
    <arg name="pos_ctrlr_name" value="position_trajectory_controller" />


    <!-- ======================================== -->
    <!-- PARAMETRES DU KUKA KR6R900 -->
    <!-- ======================================== -->


    <!-- On choisit le bon fichier de paramètres -->
    <rosparam file="$(find dimr-kuka)/config/params_sim.yaml" command="load" if="$(arg sim)"/>
    <rosparam file="$(find dimr-kuka)/config/params.yaml" command="load" unless="$(arg sim)"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find dimr-kuka)/config/hardware_controllers.yaml" command="load"/>
    <!-- Load standard kuka controller joint names from YAML file to parameter server -->
    <rosparam file="$(find dimr-kuka)/config/controller_joint_names.yaml" command="load"/>

    <!-- Chargement du modèle KR6 R900 -->
    <param name="$(arg robot_description)" command="$(find xacro)/xacro.py '$(find kuka_kr6_support)/urdf/kr6r900sixx.xacro'"/>

    <!-- ... et sa sémantique associée -->
    <param name="$(arg robot_description)_semantic" textfile="$(find dimr-kuka)/config/kuka_kr6r900sixx.srdf" />

    <!-- Load updated joint limits (override information from URDF) -->
    <group ns="$(arg robot_description)_planning">
      <rosparam command="load" file="$(find dimr-kuka)/config/joint_limits.yaml"/>
    </group>

    <!-- Load default settings for kinematics; these settings are overridden by settings in a node's namespace -->
    <group ns="$(arg robot_description)_kinematics">
      <rosparam command="load" file="$(find dimr-kuka)/config/kinematics.yaml"/>
    </group>


    <!-- ======================================== -->
    <!-- HARWARE INTERFACE -->
    <!-- ======================================== -->


    <!-- Start node without FT sensor -->
    <node name="kuka_hardware_interface" pkg="kuka_rsi_hw_interface"
      type="kuka_hardware_interface_node" respawn="false"
      output="screen"
      required="true">
      <!-- remap topics to conform to ROS-I specifications -->
      <remap from="$(arg pos_ctrlr_name)/follow_joint_trajectory" to="/joint_trajectory_action" />
      <remap from="$(arg pos_ctrlr_name)/state" to="/feedback_states" />
      <remap from="$(arg pos_ctrlr_name)/command" to="/joint_path_command"/>
    </node>

    <!-- Load controllers (ACTION topic) -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"
        args="$(arg pos_ctrlr_name) $(arg js_ctrlr)"/>
    <!-- Load robot state publisher -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- Load RSI simulation node -->
    <node name='kuka_rsi_simulator' pkg='kuka_rsi_simulator' type="kuka_rsi_simulator" args="127.0.0.1 49152" if="$(arg sim)" />


    <!-- ======================================== -->
    <!-- MOVEIT + RVIZ -->
    <!-- ======================================== -->

    <!-- Setup and launch moveit -->
    <include file="$(find dimr-kuka)/launch/moveit/move_group.launch.xml">
      <arg name="publish_monitored_planning_scene" value="true" />
    </include>

    <include file="$(find dimr-kuka)/launch/moveit/moveit_rviz.launch.xml">
      <arg name="config" value="true"/>
    </include>

</launch>
